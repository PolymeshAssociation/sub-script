[package]
name = "sub-script"
version = "0.8.0"
authors = ["Robert G. Jakabosky <robert@polymesh.network>"]
edition = "2018"
license = "Apache-2.0"
description = "Scripting tool for Substrate chains"
keywords = ["scripting", "blockchain", "substrate", "rhai"]
repository = "https://github.com/PolymeshAssociation/sub-script"
homepage = "https://github.com/PolymeshAssociation/sub-script"

[patch.crates-io]
frame-support = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
frame-system = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-application-crypto = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-arithmetic = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-io = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-core = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-std = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-version = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-runtime = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }
sp-runtime-interface = { git = "https://github.com/PolymeshAssociation/substrate", branch = "polymesh-v6-monthly-2023-03" }

polymesh-primitives = { git = "https://github.com/PolymeshAssociation/Polymesh", branch = "develop" }

bulletproofs = { version = "4.0.0", git = "https://github.com/PolymeshAssociation/bulletproofs", branch = "polymesh" }
#mercat = { path = "../cryptography/mercat" }
#mercat-common = { path = "../cryptography/mercat/cli/common/" }
#confidential_identity_core = { path = "../cryptography/confidential-identity-core" }
#confidential_identity_v1 = { path = "../cryptography/confidential-identity-v1" }
#confidential_identity_v2 = { path = "../cryptography/confidential-identity-v2" }
mercat = { version = "1.1.0", git = "https://github.com/PolymeshAssociation/cryptography", branch = "mercat_polymesh_v6.0" }
mercat-common = { version = "1.1.0", git = "https://github.com/PolymeshAssociation/cryptography", branch = "mercat_polymesh_v6.0" }
confidential_identity_core = { version = "1.1", git = "https://github.com/PolymeshAssociation/cryptography", branch = "mercat_polymesh_v6.0" }
confidential_identity_v1 = { version = "1.1", git = "https://github.com/PolymeshAssociation/cryptography", branch = "mercat_polymesh_v6.0" }
#confidential_identity_v2 = { version = "2.1", git = "https://github.com/PolymeshAssociation/cryptography", branch = "mercat_polymesh_v6.0" }

[dependencies]
anyhow = "1.0.44"
log = "0.4"
dotenv = "0.15"
env_logger = "0.9"
structopt = "0.3.25"

# Client
serde_json = { version = "1.0", features = ["preserve_order"] }
serde = "1.0"
dashmap = "5.3"
url = "2.2"
ws = { version = "0.9", features = [ "ssl" ] }
crossbeam-channel = "0.5"

# substrate
sp-core = { version = "7.0", default-features = false }
sp-runtime = { version = "7.0", default-features = false }
frame-support = { version = "4.0.0-dev", default-features = false }
frame-metadata = { version = "15.0.0", default-features = false, features = ["std"] }
parity-scale-codec = "3.0"

scale-info = { version = "2.0", default-features = false, optional = true }

# rhai
rhai = { version = "=1.6.1", default-features = false, features = ["sync", "only_i64", "no_float", "decimal", "serde", "metadata"]}
indexmap = "1.9"

hex = "0.4"
rust_decimal = "1.23"
smartstring = "1.0"

# libp2p
bs58 = { version = "0.4.0", optional = true }
libp2p-core = { version = "0.37.0", optional = true }

# Ledger
ledger-transport-hid = { version = "0.9.0", optional = true }
ledger-apdu = { version = "0.9.0", optional = true }

# Polymesh
confidential_identity_v1 = { version = "1.1.0", default-features = false, optional = true }
polymesh-primitives = { git = "https://github.com/PolymeshAssociation/Polymesh", branch = "develop", default-features = false, optional = true }

# Postgres
postgres = { version = "0.19", optional = true, features = [ "with-serde_json-1" ] }
postgres-types = { version = "0.2.3", optional = true, features = [ "derive" ] }
bytes = { version = "1.1.0", optional = true }

# MERCAT
confidential_identity_core = { version = "1.1", default-features = false, optional = true }
mercat = { version = "1.1", default-features = false, optional = true }
mercat-common = { version = "1.1", optional = true }
base64 = { version = "0.12.1", optional = true }

# Crypto
rand = { version = "0.8", optional = true, features = ["getrandom", "alloc"], default-features = false }
curve25519-dalek = { package = "curve25519-dalek-ng", optional = true, version = "4", default-features = false, features = ["nightly", "alloc"] }

[features]
default = [ "std", "pg", "ledger", "polymesh", "v12", "v13", "v14", "libp2p", "utils" ]

# Enable support for very old Polymesh version.
polymesh_v2 = [
	"polymesh",
]

libp2p = [ "bs58", "libp2p-core" ]

v12 = ["frame-metadata/v12"]
v13 = ["frame-metadata/v13"]
v14 = ["frame-metadata/v14", "scale-info"]

# Ledger
ledger = [
	"ledger-transport-hid",
	"ledger-apdu",
]

# Utils plugin.
utils = []

# Faster Elgamal decryption.
rayon = ["confidential_identity_core/rayon"]
discrete_log = ["confidential_identity_core/discrete_log"]

# Polymesh
polymesh = [
	"confidential_identity_v1",
	"polymesh-primitives",
	"confidential_identity_core",
	"mercat",
	"mercat/std",
	"mercat/balance_64",
	"mercat-common",
	"curve25519-dalek",
	"base64",
	"rand",
]

# Postgres
pg = [
	"postgres",
	"postgres-types",
	"bytes",
]

no_std = [
	"confidential_identity_core/no_std",
	"confidential_identity_v1/no_std",
	"polymesh-primitives/no_std",
	"polymesh-primitives/u64_backend",
]

std = [
	"confidential_identity_core/std",
	"rayon",
	"discrete_log",
	"confidential_identity_v1/std",
	"polymesh-primitives/std",
	"polymesh-primitives/u64_backend",
]
